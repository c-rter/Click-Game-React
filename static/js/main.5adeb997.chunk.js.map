{"version":3,"sources":["components/BuildingCard/BuildingCard.js","components/Wrapper/Wrapper.js","components/Title/Title.js","App.js","index.js"],"names":["BuildingCard","props","react_default","a","createElement","onClick","shuffleBuildings","id","className","alt","name","src","image","Wrapper","children","Title","counterStatus","App","state","buildingKey","buildings","counterKey","_this","indexID","index","findIndex","item","i","status","length","shuffledBuildings","sourceArray","j","Math","floor","random","temp","shuffle","setState","_this2","this","components_Wrapper_Wrapper","components_Title_Title","map","building","components_BuildingCard_BuildingCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"mvBAceA,SAXM,SAAAC,GAAK,OACxBC,EAAAC,EAAAC,cAAA,QAAMC,QAAS,kBAAMJ,EAAMK,iBAAiBL,EAAMM,MAClDL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,aCFxBC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWP,EAAMa,YCE1CC,SAFD,SAAAd,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAII,UAAU,SAAd,yDAA6EP,EAAMa,mBCItGE,SAAgB,GA4DLC,6MAzDbC,MAAQ,CACNC,YAAcC,EACdC,WAAYL,KAGdV,iBAAmB,SAAAC,GACjB,IAAMa,EAAYE,EAAKJ,MAAMC,YACxBI,EAAUhB,EACZiB,EAAQJ,EAAUK,UAAU,SAASC,EAAMC,GAAG,OAAOD,EAAKnB,KAAOgB,IAErE,GAAgC,IAA5BH,EAAUI,GAAOI,OAAc,CAChCZ,EAAgB,EAChB,IAAK,IAAIW,EAAI,EAAGA,EAAIP,EAAUS,OAAQF,IAEpCP,EAAUO,GAAGC,OAAS,OAK1BR,EAAUI,GAAOI,OAAS,EAC1BZ,IAcJ,IAAMc,EAXN,SAAiBC,GACf,IAAK,IAAIJ,EAAI,EAAGA,EAAII,EAAYF,OAAS,EAAGF,IAAK,CAC7C,IAAIK,EAAIL,EAAIM,KAAKC,MAAMD,KAAKE,UAAYJ,EAAYF,OAASF,IAEzDS,EAAOL,EAAYC,GACvBD,EAAYC,GAAKD,EAAYJ,GAC7BI,EAAYJ,GAAKS,EAErB,OAAOL,EAGiBM,CAAQjB,GAC/BE,EAAKgB,SAAS,CAAEnB,YAAaW,IAC7BR,EAAKgB,SAAS,CAAEjB,WAAYL,6EAGpB,IAAAuB,EAAAC,KACP,OACEtC,EAAAC,EAAAC,cAACqC,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAD,KAAQF,KAAKtB,MAAMG,YAClBmB,KAAKtB,MAAMC,YAAYwB,IAAI,SAAAC,GAAQ,OAClC1C,EAAAC,EAAAC,cAACyC,EAAD,CACEvC,iBAAkBiC,EAAKjC,iBACvBC,GAAIqC,EAASrC,GACbuC,IAAKF,EAASrC,GACdK,MAAOgC,EAAShC,MAChBgB,OAAQgB,EAAShB,mBAlDXmB,mBCJlBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5adeb997.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./BuildingCard.css\";\n\nconst BuildingCard = props => (\n  <span onClick={() => props.shuffleBuildings(props.id)}>\n  <div className=\"card\">\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n  </span>\n\n);\n\nexport default BuildingCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h2 className=\"title\">Don't Click the Same Image Twice! Your Current Score: {props.children}</h2>;\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport BuildingCard from \"./components/BuildingCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport buildings from \"./buildings.json\";\nimport \"./App.css\";\n\nvar counterStatus = 0;\n\nclass App extends Component {\n  state = {\n    buildingKey:  buildings,\n    counterKey: counterStatus\n  };\n\n  shuffleBuildings = id => {\n    const buildings = this.state.buildingKey;\n   const indexID = id;\n   var index = buildings.findIndex(function(item, i){return item.id === indexID});\n\n   if (buildings[index].status === 1) {\n      counterStatus = 0;\n      for (var i = 0; i < buildings.length; i++)\n      {\n        buildings[i].status = 0;\n      }\n   }\n   else\n   {\n    buildings[index].status = 1;\n    counterStatus++;\n   };\n\nfunction shuffle(sourceArray) {\n  for (var i = 0; i < sourceArray.length - 1; i++) {\n      var j = i + Math.floor(Math.random() * (sourceArray.length - i));\n\n      var temp = sourceArray[j];\n      sourceArray[j] = sourceArray[i];\n      sourceArray[i] = temp;\n  }\n  return sourceArray;\n}\n\nconst shuffledBuildings = shuffle(buildings);\n   this.setState({ buildingKey: shuffledBuildings });\n   this.setState({ counterKey: counterStatus });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.state.counterKey}</Title>\n        {this.state.buildingKey.map(building => (\n          <BuildingCard\n            shuffleBuildings={this.shuffleBuildings}\n            id={building.id}\n            key={building.id}\n            image={building.image}\n            status={building.status}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}